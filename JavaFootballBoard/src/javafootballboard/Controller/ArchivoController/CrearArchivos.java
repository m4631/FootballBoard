/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javafootballboard.Controller.ArchivoController;

import javafootballboard.Controller.ArchivoController.Archivos;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafootballboard.Model.DataLocal;
import javax.swing.JOptionPane;

/**
 *
 * A class designed for creating the files in which information generated by this game will be saved
 */
public class CrearArchivos {
    
    public CrearArchivos(){
        carpeta();
        archivoEquipos();
        archivoJugadores();
        archivoJuegos();
        archivoJugadas();
    }
    
    private void carpeta(){
        if(Files.notExists(DataLocal.rutaFolder))
        {
            File Archivos = new File(DataLocal.stringFolder);
            try{
                Archivos.mkdir();
                System.out.println("Folder Creado");
            }
            catch(SecurityException se){
                JOptionPane.showMessageDialog(null,"No se tiene los permisos necesarios para proceder");
            }
        }
        else
        {
            System.out.println("Ya existe el folder " + DataLocal.stringFolder);
        }
    }
    
    public static void archivoEquipos(){
        if(Files.notExists(Paths.get(DataLocal.stringEquipos)))
        {
            try(FileWriter Juegos = new FileWriter(DataLocal.stringEquipos)) { 
                Juegos.append("Nombre");
                Juegos.flush();
                System.out.println("Archivo Equipos creado");
                Juegos.close();
            }
             catch (IOException ex) {
                    Logger.getLogger(Archivos.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else
        {
            System.out.println("Ya existe el archivo " + DataLocal.stringEquipos);
        }
    }
    public static void archivoJugadores(){
        if(Files.notExists(Paths.get(DataLocal.stringJugadores)))
        {
            try(FileWriter Juegos = new FileWriter(DataLocal.stringJugadores)) 
            { 
                Juegos.append("Nombre,Apellido,Posicion,Equipo");
                Juegos.flush();
                System.out.println("Archivo Jugadores creado");
                Juegos.close();
            }
            catch (IOException ex) 
            {
                Logger.getLogger(Archivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            System.out.println("Ya existe el archivo " + DataLocal.stringJugadores);
        }
    }
    public static void archivoJuegos(){
        if(Files.notExists(Paths.get(DataLocal.stringJuegos)))
        {
            try(FileWriter Juegos = new FileWriter(DataLocal.stringJuegos)) 
            { 
                Juegos.append("Cod,Titulo,EquipoA,EquipoB,Estadio,Ciudad,Fecha,Arbitro,HoraInicio,HoraFin,PuntuacionA,PuntuacionB");
                Juegos.flush();
                System.out.println("Archivo Juegos creado");
                Juegos.close();
            }
            catch (IOException ex) 
            {
                Logger.getLogger(Archivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            System.out.println("Ya existe el archivo " + DataLocal.stringJuegos);
        }
    }
    public static void archivoJugadas(){
        if(Files.notExists(Paths.get(DataLocal.stringJugadas)))
        {
            try(FileWriter Juegos = new FileWriter(DataLocal.stringJugadas)) { 
                Juegos.append("Cod. de juego,Nombre de jugada,Jugador,Equipo,Hora");
                Juegos.flush();
                System.out.println("Archivo Jugadas creado");
                Juegos.close();
            }
            catch (IOException ex) 
            {
                Logger.getLogger(Archivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            System.out.println("Ya existe el archivo " + DataLocal.stringJugadas);
        }
    }
}
